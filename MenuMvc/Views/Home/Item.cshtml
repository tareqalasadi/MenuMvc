@inject IHttpContextAccessor HttpContextAccessor

@{
    Layout = "_Layout";
    var userId = HttpContextAccessor.HttpContext.Session.GetInt32("UserId");
}

<!-- Include Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
<!-- Include Font Awesome for Icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<!-- Include DataTables CSS -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">

<style>
    body {
        background: #f8f9fa;
        font-family: 'Arial', sans-serif;
        margin: 20px;
    }

    .card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .btn-custom {
        background: #ff7e5f;
        border: none;
        color: white;
        padding: 8px 16px;
        border-radius: 8px;
        transition: background 0.3s ease;
    }

        .btn-custom:hover {
            background: #feb47b;
        }
</style>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card">
                <div class="card-header bg-white d-flex justify-content-between align-items-center">
                    <h4 class="mb-0">Manage Items</h4>
                    <button id="addItemButton" class="btn btn-custom"><i class="fa-solid fa-plus me-2"></i>Add Item</button>
                </div>
                <div class="card-body">
                    <table id="itemTable" class="table table-striped">
                        <thead>
                            <tr>
                                <th>Item Name (EN)</th>
                                <th>Item Name (AR)</th>
                                <th>Price</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="text-center mt-4">
    <a href="@Url.Action("Dashboard", "Home")" class="btn btn-secondary">
        <i class="fa fa-arrow-left me-2"></i> Back to Home
    </a>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js" defer></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    $(document).ready(function () {
        const urlParams = new URLSearchParams(window.location.search);
        const categoryId = urlParams.get('categoryId');
        var userId = @userId;

        if (!categoryId) {
            Swal.fire('Error', 'No category selected!', 'error');
            return;
        }

        loadItems(categoryId);
    });

    function loadItems(categoryId) {
        $('#itemTable').DataTable({
            destroy: true,
            ajax: {
                url: '@Url.Action("GetItemsByCategory", "Home")' + '?categoryId=' + categoryId,
                dataSrc: '',
                error: function () {
                    Swal.fire('Error', 'Failed to load items.', 'error');
                }
            },
            columns: [
                { data: 'itemNameEn' },
                { data: 'itemNameAr' },
                { data: 'itemPrice', render: $.fn.dataTable.render.number(',', '.', 2, 'Jd') },
                {
                    data: null,
                    render: function (data, type, row) {
                        return `
    <button onclick="editItem(${row.itemId}, '${row.itemNameEn.replace(/'/g, "\\'")}', '${row.itemNameAr.replace(/'/g, "\\'")}', ${row.itemPrice}, '${row.itemImg.replace(/'/g, "\\'")}')" class="btn btn-warning btn-sm me-2"><i class="fa-solid fa-edit me-1"></i>Edit</button>
                                        <button onclick="deleteItem(${row.itemId})" class="btn btn-danger btn-sm"><i class="fa-solid fa-trash me-1"></i>Delete</button>
                            `;
                    }
                }
            ]
        });
    }

    $('#addItemButton').click(function () {
        const urlParams = new URLSearchParams(window.location.search);
        const categoryId = urlParams.get('categoryId');

        Swal.fire({
            title: 'Add Item',
            html:
                '<input id="nameEn" class="swal2-input" placeholder="Item Name (EN)">' +
                '<input id="nameAr" class="swal2-input" placeholder="Item Name (AR)">' +
                '<input id="DescriptionAr" class="swal2-input" placeholder="DescriptionAr (AR)">' +
                '<input id="DescriptionEn" class="swal2-input" placeholder="Description (EN)">' +
                '<input id="price" type="number" class="swal2-input" placeholder="Price">' +
                '<input id="img" type="file" class="swal2-input" style="width: 63%;" placeholder="Image">',
            focusConfirm: false,
            preConfirm: () => {
                const nameEn = document.getElementById('nameEn').value.trim();
                const nameAr = document.getElementById('nameAr').value.trim();
                const DescriptionAr = document.getElementById('DescriptionAr').value.trim();
                const DescriptionEn = document.getElementById('DescriptionEn').value.trim();
                const price = parseFloat(document.getElementById('price').value);
                const imgFile = document.getElementById('img').files[0]; // Get the file

                if (!nameEn || !nameAr || isNaN(price) || price <= 0 ) {
                    Swal.showValidationMessage('Please fill all fields correctly.');
                    return false;
                }

                return { nameEn, nameAr, price, imgFile,DescriptionAr,DescriptionEn };
            }
        }).then((result) => {
            if (result.isConfirmed) {
                const formData = new FormData();
                formData.append('userId', @userId);
                formData.append('categoryId', categoryId);
                formData.append('nameEn', result.value.nameEn);
                formData.append('nameAr', result.value.nameAr);
                formData.append('DescriptionAr', result.value.DescriptionAr);
                formData.append('DescriptionEn', result.value.DescriptionEn);
                formData.append('price', result.value.price);
                formData.append('imgFile', result.value.imgFile);

                $.ajax({
                    url: '@Url.Action("AddItem", "Home")',
                    method: 'POST',
                    processData: false,
                    contentType: false,
                    data: formData,
                    success: function () {
                        Swal.fire('Success!', 'Item has been added.', 'success');
                        $('#itemTable').DataTable().ajax.reload();
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error:', xhr.responseText);
                        Swal.fire('Error', 'Failed to add item.', 'error');
                    }
                });
            }
        });

    });

    function editItem(id, nameEn, nameAr, itemPrice, img) {
        let updatedImage = img;  // Declare updatedImage here, outside of didOpen to make it available globally inside editItem

        Swal.fire({
            title: 'Edit Item',
            html: `
                <input id="nameEn" class="swal2-input" value="${nameEn}" placeholder="Item Name (EN)">
                <input id="nameAr" class="swal2-input" value="${nameAr}" placeholder="Item Name (AR)">
                <input id="price" type="number" class="swal2-input" value="${itemPrice}" placeholder="Price">

                <p>Do you want to update the image?</p>
                <label for="imgUpload" style="display: block; margin-top: 10px;">
                    <input type="file" id="imgUpload" accept="image/*" style="display: none;">
                    <span id="imgUploadText" style="cursor: pointer; color: #007bff;">Click here to upload a new image</span>
                </label>
                <p id="currentImgText" style="margin-top: 10px; display: ${img ? 'block' : 'none'};">Current Image: <img src="${img}" alt="Current Image" style="width: 60px; height: 60px; border-radius: 5px;"></p>
            `,
            focusConfirm: false,
            didOpen: () => {
                const imgUpload = document.getElementById('imgUpload');
                const imgUploadText = document.getElementById('imgUploadText');
                const currentImgText = document.getElementById('currentImgText');

                imgUpload.addEventListener('change', function () {
                    const file = this.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            updatedImage = e.target.result; // Update the image when the file is selected
                            currentImgText.style.display = 'none'; // Hide the current image preview
                        };
                        reader.readAsDataURL(file);
                    }
                });

                imgUploadText.addEventListener('click', () => {
                    imgUpload.click(); // Trigger file input click on text click
                });
            },
            preConfirm: () => {
                const nameEn = document.getElementById('nameEn').value.trim();
                const nameAr = document.getElementById('nameAr').value.trim();
                const price = parseFloat(document.getElementById('price').value);

                if (!nameEn || !nameAr || isNaN(price) || price <= 0) {
                    Swal.showValidationMessage('Please fill all fields correctly.');
                    return false;
                }

                return { nameEn, nameAr, price, img: updatedImage }; // Pass the updated image here
            }
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("EditItem", "Home")',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        itemId: id,
                        itemNameEn: result.value.nameEn,
                        itemNameAr: result.value.nameAr,
                        itemPrice: result.value.price,
                        itemImg: result.value.img // Pass the updated image here (Base64 or URL)
                    }),
                    success: function () {
                        Swal.fire('Item updated!', '', 'success');
                        $('#itemTable').DataTable().ajax.reload();
                    },
                    error: function () {
                        Swal.fire('Error', 'Failed to update item.', 'error');
                    }
                });
            }
        });
    }






    function deleteItem(itemId) {
        debugger
        Swal.fire({
            title: 'Are you sure?',
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {

                const urlParams = new URLSearchParams(window.location.search);
                const categoryId = urlParams.get('categoryId');
                $.ajax({
                    url: '@Url.Action("DeleteItem", "Home")' + '?itemId=' + itemId,
                    method: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        ItemId: itemId,
                        CategoryId: categoryId

                    }),
                    success: function () {
                        Swal.fire('Deleted!', 'Item has been deleted.', 'success');
                        $('#itemTable').DataTable().ajax.reload();
                    },
                    error: function () {
                        Swal.fire('Error', 'Failed to delete item.', 'error');
                    }
                });
            }
        });
    }
</script>